<%
const content = theme.footer.content?.replace('{author.name}', (config.author || 'Anonymity'))
  ?.replace('{theme.name}', stellar_info('name'))
  ?.replace('{theme.version}', stellar_info('version'))
  ?.replace('{theme.tree}', stellar_info('tree'));

function layoutDiv() {
  let el = '';
  el += `<footer class="page-footer${scrollreveal(' ')} footnote">`;
  el += '<hr>';
  // sitemap
  if (theme.footer.sitemap && Object.keys(theme.footer.sitemap).length > 0) {
    el += '<div class="sitemap">';
    for (const group of Object.keys(theme.footer.sitemap)) {
      const items = theme.footer.sitemap[group];
      if (!items || items.length === 0) {
        continue;
      }
      el += '<div class="sitemap-group">';
      el += `<span class="fs15">${group}</span>`;
      items.forEach((item) => {
        el += `<a href="${url_for(md_link(item))}">${__(md_text(item))}</a>`;
      });
      el += '</div>';
    }
    el += '</div>';
  }
  // footer
  el += '<div class="text">';
  if (content) {
    el += markdown(content);
  }
  el += '</div></footer>';
  return el;
}
%>
<%- layoutDiv() %>

<% if (theme.footer.social && Object.keys(theme.footer.social).length > 0) { %>
  <div class="social-icons">
    <% 
      // 遍历 theme.footer.social 对象
      for (const [key, item] of Object.entries(theme.footer.social)) {
    %>
      <a href="<%= item.url %>" class="social-icon">
        <%- item.icon %>
      </a>
    <% } %>
  </div>
<% } %>
<script>
document.addEventListener('DOMContentLoaded', function() {
  let currentMode = 'sun'; // 默认天气模式
  const weatherIcon = document.getElementById('toggleWeather');
  const statusMessage = document.createElement('div');
  
  // 设置状态提示框的样式
  statusMessage.style.position = 'fixed';
  statusMessage.style.top = '20px';
  statusMessage.style.left = '50%';
  statusMessage.style.transform = 'translateX(-50%)';
  statusMessage.style.padding = '10px 20px';
  statusMessage.style.backgroundColor = '#000';
  statusMessage.style.color = '#fff';
  statusMessage.style.borderRadius = '5px';
  statusMessage.style.display = 'none';
  statusMessage.style.zIndex = '9999';
  document.body.appendChild(statusMessage);

  // 如果页面存在天气图标，初始化
  if (!weatherIcon) return;

  // 获取之前保存的天气状态
  const savedMode = localStorage.getItem('weatherMode');
  if (savedMode) {
    currentMode = savedMode;
    setWeatherMode(savedMode, false); // 不提示，直接恢复状态
  }

  // 用户点击天气图标切换天气模式
  weatherIcon.closest('a').addEventListener('click', function(e) {
    e.preventDefault();

    if (currentMode === 'sun') {
      setWeatherMode('snow', true);
      currentMode = 'snow';
    } else if (currentMode === 'snow') {
      setWeatherMode('rain', true);
      currentMode = 'rain';
    } else if (currentMode === 'rain') {
      setWeatherMode('sun', true);
      currentMode = 'sun';
    }
  });

  // 设置天气模式
  function setWeatherMode(mode, showTip = false) {
    // 卸载当前所有特效
    removeScripts();

    if (mode === 'snow') {
      weatherIcon.src = '/assets/icons/snow.svg';
      loadScript('snow');
      if (showTip) statusMessage.textContent = '❄️ Snow ❄️';
    } else if (mode === 'rain') {
      weatherIcon.src = '/assets/icons/rain.svg';
      loadScript('rain');
      if (showTip) statusMessage.textContent = '🌧️ Rain 🌧️';
    } else if (mode === 'sun') {
      weatherIcon.src = '/assets/icons/sun.svg';
      if (showTip) statusMessage.textContent = '☀️ Sun ☀️';
    }

    // 显示提示框
    if (showTip) {
      statusMessage.style.display = 'block';
      setTimeout(() => {
        statusMessage.style.display = 'none';
      }, 3000); // 提示框消失的延时
    }

    // 保存天气状态
    localStorage.setItem('weatherMode', mode);
  }

  // 动态加载特效脚本
  function loadScript(mode) {
    if (mode === 'snow' && !window.__snow__) {
      const script = document.createElement('script');
      script.src = '/js/snow.js';
      script.defer = true;
      document.body.appendChild(script);
    } else if (mode === 'rain' && !window.__rain__) {
      const script = document.createElement('script');
      script.src = '/js/rain.js';
      script.defer = true;
      document.body.appendChild(script);
    }
  }

  // 卸载当前的天气特效
  function removeScripts() {
    // 清除雪花特效
    if (window.__snow__) {
      clearInterval(window.__snow__.timer);
      if (window.__snow__.canvas) {
        window.__snow__.canvas.remove();
      }
      delete window.__snow__;
    }
    
    // 清除雨天特效
    if (window.__rain__) {
      clearInterval(window.__rain__.timer); // 停止雨滴生成
      const rainCanvas = document.querySelector('[data-rain-canvas]');
      if (rainCanvas) {
        rainCanvas.remove(); // 移除雨滴容器
      }
      delete window.__rain__; // 清除全局变量
    }
  }
});

</script>